apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice
spec:
  replicas: 4
  selector:
    matchLabels:
      app: microservice
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: microservice
    spec:
      containers:
        - name: microservice
          image: dullaraviteja/k8sapp:1.0
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: db-url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: db-user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: db-password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: database
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: db-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: db-database
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: db-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: db-password
          volumeMounts:
            - name: database-data
              mountPath: /var/lib/mysql
            - name: init-scripts-volume
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: database-data
          persistentVolumeClaim:
            claimName: database-pvc
        - name: init-scripts-volume
          configMap:
            name: init-scripts-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: microservice
spec:
  selector:
    app: microservice
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: database
spec:
  selector:
    app: database
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306